openapi: 3.0.3
info:
  title: Todo API
  version: "1.0.0"
  description: |
    Простое REST API для управления списком задач (todo list).
servers:
  - url: http://localhost:3000

paths:
  /tasks:
    get:
      summary: Получить список задач
      parameters:
        - in: query
          name: completed
          required: false
          schema:
            type: boolean
          description: Фильтр по статусу выполнения
      responses:
        '200':
          description: ОК
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Создать задачу
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskInput'
      responses:
        '201':
          description: Создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/ValidationError'

  /tasks/{id}:
    get:
      summary: Получить задачу по id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: ОК
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Обновить задачу
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskInput'
      responses:
        '200':
          description: Обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Удалить задачу
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '204':
          description: Удалено
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    Task:
      type: object
      required: [id, title, completed, createdAt, updatedAt]
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Купить молоко"
        description:
          type: string
          example: "2 литра, безлактозное"
        completed:
          type: boolean
          example: false
        createdAt:
          type: string
          format: date-time
          example: "2025-09-16T12:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-09-16T12:00:00.000Z"
    CreateTaskInput:
      type: object
      required: [title]
      properties:
        title:
          type: string
          example: "Купить молоко"
        description:
          type: string
          example: "2 литра, безлактозное"
        completed:
          type: boolean
          example: false
    UpdateTaskInput:
      type: object
      properties:
        title:
          type: string
          example: "Обновлённый заголовок"
        description:
          type: string
          example: "Уточнённое описание"
        completed:
          type: boolean
          example: true

  responses:
    ValidationError:
      description: Ошибка валидации
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "ValidationError"
              details:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: "title"
                    message:
                      type: string
                      example: "title is required and must be a non-empty string"
                    location:
                      type: string
                      example: "body"
    NotFound:
      description: Не найдено
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "NotFound"
              message:
                type: string
                example: "Task 123 not found"
